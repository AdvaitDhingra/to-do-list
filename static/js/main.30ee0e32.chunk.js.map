{"version":3,"sources":["components/firebase.js","components/notes.js","components/main.js","App.js","reportWebVitals.js","index.js"],"names":["fire","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","Notes","useState","notes","setNotes","useEffect","firestore","collection","onSnapshot","snap","notesCopy","forEach","doc","push","data","console","log","style","width","height","display","Typography","color","fontSize","varient","gutterBottom","map","note","Grow","in","Card","marginBottom","alignItems","CardContent","CardActions","IconButton","onClick","item","delete","then","catch","error","Main","noteDialogOpen","setNoteDialogOpen","currentNote","setCurrentNote","dialogref","useRef","position","top","left","padding","Fab","current","aria-label","right","bottom","Dialog","open","onClose","DialogTitle","Input","ref","marginLeft","marginRight","type","multiline","placeholder","onChange","e","target","value","Button","preventDefault","set","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.30ee0e32.chunk.js","sourcesContent":["import firebase from 'firebase'\n\nvar firebaseConfig = {\n    apiKey: \"AIzaSyAGOs2uu2wsWwnWeiRoe-sSRtKkXg1H_As\",\n    authDomain: \"course-match-d0348.firebaseapp.com\",\n    databaseURL: \"https://course-match-d0348.firebaseio.com\",\n    projectId: \"course-match-d0348\",\n    storageBucket: \"course-match-d0348.appspot.com\",\n    messagingSenderId: \"746587302289\",\n    appId: \"1:746587302289:web:0295b94dfaeb9013c75230\",\n    measurementId: \"G-F619DFSCN6\"\n  };\n  // Initialize Firebase\n  var fire = firebase.initializeApp(firebaseConfig);\n  firebase.analytics();\n\n  export default fire\n","import { Card, CardContent, Typography, IconButton, CardActions, Grow } from \"@material-ui/core\"\nimport { useEffect, useState } from \"react\"\nimport fire from './firebase'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\n\nconst Notes = () => {\n    const [notes, setNotes] = useState([])\n\n    useEffect(() => {\n        fire.firestore().collection(\"notes\").onSnapshot(snap => {\n            var notesCopy = [...notes]\n            snap.forEach(doc => {\n                notesCopy.push(doc.data()['note'])\n                \n            })\n            setNotes(notesCopy)\n            console.log(notes)\n        })\n        console.log(notes)\n    }, [])\n    function remove(item){\n        var noteRef = fire.firestore().collection(\"notes\").doc(item);\n\n        noteRef.delete().then({\n        }).catch(error => {\n            console.log(error)\n        })\n    }\n    return(\n        <div style = {{\n            width: \"100%\",\n            height: \"20%\",\n            display: \"block\"\n        }}>\n            <Typography style = {{\n                color: \"white\",\n                fontSize: \"30px\"\n            }} varient = \"h4\" gutterBottom>\n                Tasks/Notes:\n            </Typography>\n            {\n                notes.map(note => {\n                    return(\n                        <Grow in = {true}>\n                        <Card key = {note} style = {{\n                            marginBottom: \"20px\",\n                            display: \"flex\",\n                            alignItems: \"center\",\n\n                        }}>\n                            <CardContent>\n                                <Typography>{note}</Typography>\n                                \n                            </CardContent>\n                            <CardActions>\n                            <IconButton onClick = {() => remove(note)}><DeleteIcon/></IconButton>\n                            </CardActions>\n                        </Card>\n                        </Grow>\n                    )\n                })\n            }\n        </div>\n    )\n}\nexport default Notes","import { Dialog, Fab, Typography, DialogTitle, Input, Button } from \"@material-ui/core\"\nimport AddIcon from '@material-ui/icons/Add';\n\nimport { useRef, useState } from 'react'\n\nimport fire from './firebase'\n\nimport Notes from './notes'\n\nconst Main = () => {\n    const [noteDialogOpen, setNoteDialogOpen] = useState(false);\n\n    const [currentNote, setCurrentNote] = useState(\"\")\n\n    const dialogref = useRef();\n\n\n    function newNote(){\n        console.log(dialogref.current)\n        setNoteDialogOpen(true)\n\n    }\n    function uploadNote(e){\n        e.preventDefault()\n\n        fire    \n            .firestore()\n            .collection(\"notes\")\n            .doc(currentNote)\n            .set({\n                note: currentNote\n            }).then({\n            }).catch(error => {\n                console.log(error)\n            })\n        setCurrentNote(\"\")\n        setNoteDialogOpen(false)\n    }\n    return(\n        <div style = {{\n            width: \"100%\",\n            height: \"100%\",\n\n        }}>\n            \n            <div style = {{\n                position: \"absolute\",\n                top: \"0\",\n                left: \"0\",\n                width:\"80%\",\n                height: \"auto\",\n                padding: \"20px 20px\"\n            }}>\n                <Notes/>\n            </div>\n            <Fab onClick = {newNote} color = \"primary\" aria-label = \"add\" style = {{\n                position: \"fixed\",\n                right: \"10%\",\n                bottom: \"10%\"\n            }}>\n                <AddIcon/>\n            </Fab>\n            <Dialog open = {noteDialogOpen} onClose = {() => setNoteDialogOpen(false)} style = {{\n                padding: \"20px 20px\"\n            }}>\n                <DialogTitle>\n                    <Typography>\n                        Add a new note\n                    </Typography>\n                </DialogTitle>\n                <form>\n                <Input ref = {dialogref} style = {{\n                    width: \"70%\",\n                    height: \"30%\",\n                    marginLeft: \"20px\",\n                    marginRight: \"20px\",\n                    marginBottom: \"20px\"\n                }}type = \"text\" multiline placeholder = \"Reminder/Note?\" onChange = {(e) => setCurrentNote(e.target.value)}/>\n                <Button color = \"primary\" varient = \"contained\" onClick = {uploadNote}>Add</Button>\n                </form>\n            </Dialog>\n        </div>\n    )\n}\nexport default Main","import './App.css';\n\nimport Main from './components/main'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}