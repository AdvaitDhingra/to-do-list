[{"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\index.js":"1","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\reportWebVitals.js":"2","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\App.js":"3","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\main.js":"4","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\notes.js":"5","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\firebase.js":"6","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\login.js":"7"},{"size":517,"mtime":1612517786830,"results":"8","hashOfConfig":"9"},{"size":375,"mtime":1612517786830,"results":"10","hashOfConfig":"9"},{"size":181,"mtime":1612517786828,"results":"11","hashOfConfig":"9"},{"size":3011,"mtime":1612518821880,"results":"12","hashOfConfig":"9"},{"size":758,"mtime":1612517786829,"results":"13","hashOfConfig":"9"},{"size":660,"mtime":1612518630472,"results":"14","hashOfConfig":"9"},{"size":1430,"mtime":1612518703636,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1de0quv",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"18"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"18"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\index.js",[],["34","35"],"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\reportWebVitals.js",[],"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\App.js",[],"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\main.js",["36"],"import { Dialog, Fab, Typography, DialogTitle, Input, Button } from \"@material-ui/core\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { useState, useEffect } from 'react'\r\n\r\nimport fire from './firebase'\r\n\r\nimport Notes from './notes'\r\n\r\nimport Login from './login'\r\n\r\nconst Main = () => {\r\n    const [noteDialogOpen, setNoteDialogOpen] = useState(false);\r\n\r\n    const [currentNote, setCurrentNote] = useState(\"\")\r\n\r\n    const [user, setUser] = useState({})\r\n\r\n    useEffect(() => {\r\n        fire.auth().onAuthStateChanged(user => {\r\n            if (user && user.uid == \"AtpgkAlgDiV0dQ5zuQtQIwRGQNQ2\"){\r\n                setUser(user)\r\n            }\r\n            else{\r\n                setUser(null)\r\n            }\r\n        })\r\n    })\r\n\r\n    function newNote(){\r\n        setNoteDialogOpen(true)\r\n    }\r\n    function uploadNote(e){\r\n        e.preventDefault()\r\n\r\n        fire    \r\n            .firestore()\r\n            .collection(\"notes\")\r\n            .add({\r\n                note: currentNote\r\n            }).then({\r\n            }).catch(error => {\r\n                console.log(error)\r\n            })\r\n        setCurrentNote(\"\")\r\n        setNoteDialogOpen(false)\r\n    }\r\n    return(\r\n        user ? (\r\n            <div style = {{\r\n                width: \"100%\",\r\n                height: \"100%\",\r\n            }}>\r\n                <div style = {{\r\n                    backgroundColor: \"white\",\r\n                    position: \"absolute\",\r\n                    top: \"0\",\r\n                    left: \"0\",\r\n                    width: \"100%\",\r\n                    height: \"auto\"\r\n                }}>\r\n                    <Notes/>\r\n                </div>\r\n                <Fab onClick = {newNote} color = \"primary\" aria-label = \"add\" style = {{\r\n                    position: \"fixed\",\r\n                    right: \"10%\",\r\n                    bottom: \"10%\"\r\n                }}>\r\n                    <AddIcon/>\r\n                </Fab>\r\n                <Dialog open = {noteDialogOpen} onClose = {() => setNoteDialogOpen(false)} style = {{\r\n                    padding: \"20px 20px\"\r\n                }}>\r\n                    <DialogTitle>\r\n                        <Typography>\r\n                            Add a new note\r\n                        </Typography>\r\n                    </DialogTitle>\r\n                    <form>\r\n                    <Input style = {{\r\n                        width: \"500px\",\r\n                        height: \"200px\",\r\n                        marginLeft: \"20px\",\r\n                        marginRight: \"20px\",\r\n                        marginBottom: \"20px\"\r\n                    }}type = \"text\" multiline placeholder = \"Reminder/Note?\" onChange = {(e) => setCurrentNote(e.target.value)}/>\r\n                    <Button color = \"primary\" varient = \"contained\" onClick = {uploadNote}>Add</Button>\r\n                    </form>\r\n                </Dialog>\r\n            </div>\r\n        ) : (\r\n            <div>\r\n                <Login/>\r\n            </div>\r\n        )\r\n    )\r\n}\r\nexport default Main","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\notes.js",["37"],"import { useEffect, useState } from \"react\"\r\nimport fire from './firebase'\r\n\r\nconst Notes = () => {\r\n    const [notes, setNotes] = useState([])\r\n\r\n    useEffect(() => {\r\n        fire.firestore().collection(\"notes\").onSnapshot(snap => {\r\n            var notess = []\r\n            snap.forEach(doc => {\r\n                notes.push(doc.data())\r\n            })\r\n            setNotes(notess)\r\n        })\r\n        console.log(notes)\r\n    }, [])\r\n    return(\r\n        <div>\r\n            {\r\n                notes.map(note => {\r\n                    return(\r\n                        <div>\r\n                            <p>{note}</p>\r\n                        </div>\r\n                    )\r\n                })\r\n            }\r\n        </div>\r\n    )\r\n}\r\nexport default Notes","C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\firebase.js",[],"C:\\Users\\advai\\Documents\\Coding\\to-do-list\\src\\components\\login.js",["38","39","40","41","42","43"],"import Button from '@material-ui/core/Button'\r\n\r\nimport GoogleIcon from './icons8-google.svg'\r\n\r\nimport fire, { provider } from './firebase'\r\n\r\nconst Login = () => {\r\n    function signIn(){\r\n        fire.auth()\r\n            .signInWithPopup(provider)\r\n            .then((result) => {\r\n                var credential = result.credential;\r\n\r\n                // This gives you a Google Access Token. You can use it to access the Google API.\r\n                var token = credential.accessToken;\r\n                // The signed-in user info.\r\n                var user = result.user;\r\n                // ...\r\n            }).catch((error) => {\r\n                // Handle Errors here.\r\n                var errorCode = error.code;\r\n                var errorMessage = error.message;\r\n                // The email of the user's account used.\r\n                var email = error.email;\r\n                // The firebase.auth.AuthCredential type that was used.\r\n                var credential = error.credential;\r\n                // ...\r\n            });\r\n    }\r\n    return(\r\n        <div>\r\n            <Button onClick = {signIn} style = {{\r\n                position: \"absolute\",\r\n                top: \"50%\",\r\n                left: \"50%\",\r\n                transform: \"translate(-50%, -50%)\"\r\n            }} variant = \"contained\">Sign In with Google <img  src = {GoogleIcon} alt = \"google\"/></Button>\r\n        </div>\r\n    )\r\n}\r\nexport default Login",{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","severity":1,"message":"49","line":21,"column":34,"nodeType":"50","messageId":"51","endLine":21,"endColumn":36},{"ruleId":"52","severity":1,"message":"53","line":16,"column":8,"nodeType":"54","endLine":16,"endColumn":10,"suggestions":"55"},{"ruleId":"56","severity":1,"message":"57","line":15,"column":21,"nodeType":"58","messageId":"59","endLine":15,"endColumn":26},{"ruleId":"56","severity":1,"message":"60","line":17,"column":21,"nodeType":"58","messageId":"59","endLine":17,"endColumn":25},{"ruleId":"56","severity":1,"message":"61","line":21,"column":21,"nodeType":"58","messageId":"59","endLine":21,"endColumn":30},{"ruleId":"56","severity":1,"message":"62","line":22,"column":21,"nodeType":"58","messageId":"59","endLine":22,"endColumn":33},{"ruleId":"56","severity":1,"message":"63","line":24,"column":21,"nodeType":"58","messageId":"59","endLine":24,"endColumn":26},{"ruleId":"56","severity":1,"message":"64","line":26,"column":21,"nodeType":"58","messageId":"59","endLine":26,"endColumn":31},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'notes'. Either include it or remove the dependency array.","ArrayExpression",["67"],"no-unused-vars","'token' is assigned a value but never used.","Identifier","unusedVar","'user' is assigned a value but never used.","'errorCode' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","'email' is assigned a value but never used.","'credential' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"68","fix":"69"},"Update the dependencies array to be: [notes]",{"range":"70","text":"71"},[434,436],"[notes]"]